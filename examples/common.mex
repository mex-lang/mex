package Common;

fragment Dic<Key, Data> {
    id: Key,
    name: Data
}

fragment AuditTrail<User, Instant> {
    created: (User, Instant),
    updated: (User, Instant)? // ( (User, Instant) + () )
}

model AccessRight {
    ... Dic<Int, String>,
    ... AuditTrail<User, DateTime>,
    comment: Textarea
}

model Email(String);

model Password[min_len: Int = 12] {
    Password(String),
    HashedPassword(value: String[len=32], salt String[len=5])
}

model File[bucket: String]([Byte]);

model Location(String);

model Textarea[lines: Int = 3](String);

model Wysiwyg(String);

model Language(String);

enum CommonStatus {
    Draft,
    Published(DateTime),
    Archived(DateTime)
}

scalar String;
scalar Int;
scalar DateTime;
scalar Byte;